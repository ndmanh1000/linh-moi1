import { PlusOutlinedIcon, MoreIcon, ScanIcon } from '../../icons';
import { Modal } from '../ui/modal';
import { useState } from 'react';

import { useModal } from '../../hooks/useModal';
import ModalQr from '../modal/ModalQr';
import { GoPlus } from 'react-icons/go';
import PmTable from '../tables/PmTable';
import ModalAddWorkOrderDetails from '../modal/ModalAddWorkOrderDetails';
import ScheduleBox from './ScheduleBox';
import ModalScanQr from '../modal/ModalScanQr';

export default function PreventiveMaintHeader() {
  const { isOpen, openModal, closeModal } = useModal();
  const { isOpen: isModalQrOpen, openModal: openModalQr, closeModal: closeModalQr } = useModal();
  const {
    isOpen: isModalAddWorkOrderDetailsOpen,
    openModal: openModalAddWorkOrderDetails,
    closeModal: closeModalAddWorkOrderDetails,
  } = useModal();
  const [showScheduleBox, setShowScheduleBox] = useState(false);
  const {
    isOpen: isModalScanQrOpen,
    openModal: openModalScanQr,
    closeModal: closeModalScanQr,
  } = useModal();

  return (
    <div>
      <div className="w-full flex items-center justify-between">
        <div>Preventive Maintenance</div>
        <div className="flex items-center md:gap-10 gap-5">
          <button
            onClick={openModal}
            className="flex items-center gap-2 justify-center text-white bg-[#1677ff] px-2 py-2 rounded-[8px] hover:bg-blue-light-300 cursor-pointer"
          >
            <PlusOutlinedIcon />
            <p>Creater PM</p>
          </button>

          <div className="cursor-pointer">
            <MoreIcon />
          </div>
          <div className="cursor-pointer">
            <ScanIcon className="w-5 h-5" onClick={openModalScanQr} />
          </div>
        </div>

        <Modal isOpen={isOpen} onClose={closeModal} className="fixed inset-0 w-full h-full m-0 p-0">
          <div className="w-full h-full bg-white dark:bg-gray-900 overflow-y-auto p-4 lg:p-11">
            <div>
              <h4 className="mb-2 text-2xl font-semibold text-gray-800 dark:text-white/90">
                Create PM
              </h4>
            </div>
            <form className="flex flex-col w-full">
              <div className="w-full">
                <div className="mt-7 w-full">
                  <div className="w-full border-b border-[#F3F3F3] mt-4"></div>

                  <div className="w-full grid grid-cols-1 md:flex items-center md:gap-8 gap-2">
                    <div className="md:mt-3 mt-3 w-full">
                      <div className="flex flex-col gap-2 md:gap-2">
                        <p>Work Order details</p>
                        <p>
                          Specify the details of the work order that will be generated by this
                          preventive maintenance trigger.
                        </p>
                      </div>
                      <div className="w-full rounded-[8px] border border-[#D9D9D9] bg-white px-[8px] py-[24px] md:mt-2 mt-3">
                        <button
                          className="w-full rounded-[8px] border border-[#D9D9D9] bg-white"
                          type="button"
                          onClick={openModalAddWorkOrderDetails}
                        >
                          Add Word Order Details
                        </button>
                      </div>
                    </div>
                    <div className="md:mt-3 mt-3 w-full">
                      <div className="flex flex-col gap-2 md:gap-2">
                        <p>Schedules</p>
                        <p>Specify the date and time for the scheduled maintenance.</p>
                      </div>
                      <div className="w-full rounded-[8px] border border-[#D9D9D9] bg-white px-[8px] py-[24px] md:mt-2 mt-3">
                        <button
                          className="w-full rounded-[8px] border border-[#D9D9D9] bg-white relative z-20"
                          type="button"
                          onClick={() => setShowScheduleBox(!showScheduleBox)}
                        >
                          Add Schedule
                        </button>

                        {showScheduleBox && <ScheduleBox />}
                      </div>
                    </div>
                  </div>
                  <div className="md:mt-6 mt-3 grid grid-cols-1 md:flex items-center md:justify-between">
                    <div className="flex flex-col md:gap-2 gap-2">
                      <p>Assets & Locations</p>
                      <p>
                        Select Asset and Locations, assign them to the schedule, and define
                        assignees and start dates.
                      </p>
                    </div>
                    <div className="grid grid-cols-1 md:flex items-center md:gap-2 gap-2">
                      <button
                        className="flex items-center gap-2 md:gap-2 h-10 border border-[#D9D9D9] bg-white rounded-[8px] p-2"
                        type="button"
                      >
                        <GoPlus />
                        Add Row
                      </button>
                      <button
                        className="flex items-center gap-2 md:gap-2 h-10 border border-[#D9D9D9] bg-white rounded-[8px] p-2"
                        type="button"
                      >
                        Bulk Select Assets
                      </button>
                    </div>
                  </div>
                  <div className="md:mt-4 mt-4">
                    <PmTable />
                  </div>

                  <div className="w-full flex items-center justify-end gap-2 md:gap-4 md:mt-3 mt-3">
                    <button
                      onClick={closeModal}
                      className="bg-white px-2 py-2 rounded border border-gray-300"
                    >
                      Cancel
                    </button>
                    <button className="border border-gray-300 bg-white flex items-center justify-center px-2 py-2 rounded-[4px]">
                      Creater PM
                    </button>
                  </div>
                </div>
              </div>
            </form>
          </div>
        </Modal>
      </div>
      <ModalQr isOpen={isModalQrOpen} onClose={closeModalQr} />
      <ModalAddWorkOrderDetails
        isOpen={isModalAddWorkOrderDetailsOpen}
        onClose={closeModalAddWorkOrderDetails}
      />
      <ModalScanQr
        isOpen={isModalScanQrOpen}
        onClose={closeModalScanQr}
        onScanSuccess={(result) => {
          console.log('QR Scan result:', result);
          closeModalScanQr();
          // Mở ModalQr sau khi quét QR thành công
          setTimeout(() => {
            openModalQr();
          }, 100);
        }}
      />
    </div>
  );
}
